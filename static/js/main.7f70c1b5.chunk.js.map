{"version":3,"sources":["apis/streams.js","history.js","actions/index.js","actions/types.js","components/streams/StreamForm.js","components/streams/StreamCreate.js","components/streams/StreamEdit.js","components/Modal.js","components/streams/StreamDelete.js","components/streams/StreamList.js","components/streams/StreamShow.js","components/GoogleAuth.js","components/Header.js","components/App.js","reducers/authReducer.js","reducers/index.js","reducers/streamReducer.js","index.js"],"names":["axios","create","baseURL","createBrowserHistory","fetchStream","id","dispatch","a","streams","get","response","type","payload","data","StreamForm","renderInput","input","label","meta","className","error","touched","autoComplete","renderError","onSubmit","formValues","props","this","handleSubmit","Field","name","component","React","Component","reduxForm","form","validate","errors","title","description","StreamCreate","createStream","connect","getState","userId","auth","post","history","push","StreamEdit","editStream","match","params","stream","initialValues","_","pick","state","ownProps","patch","Modal","ReactDOM","createPortal","onClick","onDismiss","e","stopPropagation","content","actions","document","querySelector","StreamDelete","Fragment","deleteStream","to","renderContent","renderActions","delete","StreamList","fetchStreams","currentUserId","map","key","renderAdmin","isSignedIn","style","textAlign","renderList","renderCreate","Object","values","StreamShow","videoRef","createRef","buildPlayer","player","destroy","flv","createPlayer","url","attachMediaElement","current","load","ref","width","controls","GoogleAuth","onAuthChange","signIn","currentUser","getId","signOut","onSignInClick","onSignOutClick","window","gapi","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","Header","App","path","exact","INITIAL_STATE","combineReducers","action","formReducer","mapKeys","omit","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","render"],"mappings":"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","file":"static/js/main.7f70c1b5.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL: \"http://localhost:3001\"\r\n});","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import streams from \"../apis/streams\";\r\nimport history from \"../history\";\r\nimport { \r\n    SIGN_IN,\r\n    SIGN_OUT,\r\n    CREATE_STREAM,\r\n    FETCH_STREAMS,\r\n    FETCH_STREAM,\r\n    DELETE_STREAM,\r\n    EDIT_STREAM\r\n} from \"./types\";\r\n\r\nexport const signIn = (userId) => {\r\n    return {\r\n        type: SIGN_IN,\r\n        payload: userId\r\n    };\r\n};\r\n\r\nexport const signOut = () => {\r\n    return {\r\n        type: SIGN_OUT\r\n    };\r\n};\r\n\r\nexport const createStream = formValues => async (dispatch, getState) => {\r\n    const { userId } = getState().auth;\r\n    const response = await streams.post(\"/streams\", { ...formValues, userId });\r\n\r\n    dispatch({ type: CREATE_STREAM, payload: response.data });\r\n    history.push(\"/\");\r\n};\r\n\r\nexport const fetchStreams = () => async dispatch => {\r\n    const response = await streams.get(\"/streams\");\r\n\r\n    dispatch({ type: FETCH_STREAMS, payload: response.data });\r\n};\r\n\r\nexport const fetchStream = id => async dispatch => {\r\n    const response = await streams.get(`/streams/${id}`);\r\n\r\n    dispatch({ type: FETCH_STREAM, payload: response.data });\r\n};\r\n\r\nexport const editStream = (id, formValues) => async dispatch => {\r\n    const response = await streams.patch(`/streams/${id}`, formValues);\r\n\r\n    dispatch({ type: EDIT_STREAM, payload: response.data });\r\n    history.push(\"/\");\r\n};\r\n\r\nexport const deleteStream = id => async dispatch => {\r\n    await streams.delete(`/streams/${id}`);\r\n\r\n    dispatch({ type: DELETE_STREAM, payload: id });\r\n    history.push(\"/\");\r\n};","export const SIGN_IN = \"SIGN_IN\";\r\nexport const SIGN_OUT = \"SIGN_OUT\";\r\nexport const CREATE_STREAM = \"CREATE_STREAM\";\r\nexport const FETCH_STREAMS = \"FETCH_STREAMS\";\r\nexport const FETCH_STREAM = \"FETCH_STREAM\";\r\nexport const DELETE_STREAM = \"DELETE_STREAM\";\r\nexport const EDIT_STREAM = \"EDIT_STREAM\";","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\nclass StreamForm extends React.Component {\r\n    renderError({ error, touched }) {\r\n        if (touched && error) {\r\n            return (\r\n                <div className=\"ui error message\">\r\n                    <div className=\"header\">{error}</div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n    \r\n    renderInput = ({ input, label, meta }) => {\r\n        const className = `field ${meta.error && meta.touched ? \"error\": \"\"}`;\r\n        return (\r\n            <div className={className}>\r\n                <label>{label}</label>\r\n                <input {...input} autoComplete=\"off\" />\r\n                {this.renderError(meta)}\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    onSubmit = formValues => {\r\n        this.props.onSubmit(formValues);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form\r\n                onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form error\"\r\n            >\r\n                <Field\r\n                    name=\"title\"\r\n                    component={this.renderInput}\r\n                    label=\"Enter Title\"\r\n                />\r\n                <Field\r\n                    name=\"description\"\r\n                    component={this.renderInput}\r\n                    label=\"Enter Description\"\r\n                />\r\n                <button className=\"ui button primary\">Submit</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst validate = formValues => {\r\n    const errors = {};\r\n\r\n    if (!formValues.title) {\r\n        errors.title = \"You must enter a title\";\r\n    }\r\n\r\n    if (!formValues.description) {\r\n        errors.description = \"You must enter a description\";\r\n    }\r\n\r\n    return errors;\r\n};\r\n\r\nexport default reduxForm({\r\n    form: \"streamForm\",\r\n    validate: validate\r\n})(StreamForm);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStream } from \"../../actions\";\r\nimport StreamForm from \"./StreamForm\";\r\n\r\nclass StreamCreate extends React.Component {\r\n    onSubmit = formValues => {\r\n        this.props.createStream(formValues);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Create a Stream</h3>\r\n                <StreamForm onSubmit={this.onSubmit} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, { createStream })(StreamCreate);","import _ from \"lodash\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchStream, editStream } from \"../../actions\";\r\nimport StreamForm from \"./StreamForm\";\r\n\r\nclass StreamEdit extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchStream(this.props.match.params.id);\r\n    }\r\n\r\n    onSubmit = formValues => {\r\n        this.props.editStream(this.props.match.params.id, formValues);\r\n    };\r\n\r\n    render() {\r\n        if (!this.props.stream) {\r\n            return <div>Loading...</div>;\r\n        }\r\n        \r\n        return (\r\n            <div>\r\n                <h3>Edit a Stream</h3>\r\n                <StreamForm\r\n                    initialValues={_.pick(this.props.stream, \"title\", \"description\")}\r\n                    onSubmit={this.onSubmit}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { stream: state.streams[ownProps.match.params.id] };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchStream, editStream })(StreamEdit);","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst Modal = props => {\r\n    return ReactDOM.createPortal(\r\n        <div\r\n            onClick={props.onDismiss}\r\n            className=\"ui dimmer modals visible active\"\r\n        >\r\n            <div\r\n                onClick={e => e.stopPropagation()}\r\n                className=\"ui standard modal visible active\"\r\n            >\r\n                <div className=\"header\">{props.title}</div>\r\n                <div className=\"content\">\r\n                    {props.content}\r\n                </div>\r\n                <div className=\"actions\">\r\n                    {props.actions}\r\n                </div>\r\n            </div>\r\n        </div>,\r\n        document.querySelector(\"#modal\")\r\n    );\r\n};\r\n\r\nexport default Modal;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Modal from \"../Modal\";\r\nimport history from \"../../history\";\r\nimport { fetchStream, deleteStream } from \"../../actions\";\r\n\r\nclass StreamDelete extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchStream(this.props.match.params.id);\r\n    }\r\n    \r\n    renderActions() {\r\n        const { id } = this.props.match.params;\r\n        return (\r\n            <React.Fragment>\r\n                <button\r\n                    onClick={() => this.props.deleteStream(id)} className=\"ui button negative\">\r\n                        Delete\r\n                </button>\r\n                <Link to=\"/\" className=\"ui button\">Cancel</Link>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    renderContent() {\r\n        if (!this.props.stream) {\r\n            return \"Are you sure you want to delete this stream?\"\r\n        }\r\n\r\n        return `Are you sure you want to delete the stream with title: ${this.props.stream.title}`\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Modal\r\n                title=\"Delete Stream\"\r\n                content={this.renderContent()}\r\n                actions={this.renderActions()}\r\n                onDismiss={() => history.push(\"/\")}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { stream: state.streams[ownProps.match.params.id] }\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchStream, deleteStream })(StreamDelete);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchStreams } from \"../../actions\";\r\n\r\nclass StreamList extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchStreams();\r\n    }\r\n\r\n    renderAdmin(stream) {\r\n        if (stream.userId === this.props.currentUserId) {\r\n            return (\r\n                <div className=\"right floated content\">\r\n                    <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">\r\n                        Edit\r\n                    </Link>\r\n                    <Link to={`/streams/delete/${stream.id}`} className=\"ui button negative\">\r\n                        Delete\r\n                    </Link>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderList() {\r\n        return this.props.streams.map(stream => {\r\n            return (\r\n                <div className=\"item\" key={stream.id}>\r\n                    {this.renderAdmin(stream)}\r\n                    <i className=\"large middle aligned icon camera\" />\r\n                    <div className=\"content\">\r\n                        <Link to={`/streams/${stream.id}`} className=\"header\">\r\n                            {stream.title}\r\n                        </Link>\r\n                        <div className=\"description\">{stream.description}</div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    renderCreate() {\r\n        if (this.props.isSignedIn) {\r\n            return (\r\n                <div style={{ textAlign: \"right\" }}>\r\n                    <Link to=\"/streams/new\" className=\"ui button primary\">\r\n                        Create Stream\r\n                    </Link>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Streams</h2>\r\n                <div className=\"ui celled list\">{this.renderList()}</div>\r\n                {this.renderCreate()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        streams: Object.values(state.streams),\r\n        currentUserId: state.auth.userId,\r\n        isSignedIn: state.auth.isSignedIn\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { fetchStreams }\r\n)(StreamList);","import React from \"react\";\r\nimport flv from \"flv.js\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchStream } from \"../../actions\";\r\n\r\nclass StreamShow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.videoRef = React.createRef();\r\n    }\r\n    \r\n    componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        \r\n        this.props.fetchStream(this.props.match.params.id);\r\n        this.buildPlayer();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.buildPlayer();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.player.destroy();\r\n    }\r\n\r\n    buildPlayer() {\r\n        if (this.player || !this.props.stream) {\r\n            return;\r\n        }\r\n\r\n        const { id } = this.props.match.params;\r\n        this.player = flv.createPlayer({\r\n            type: \"flv\",\r\n            url: `http://localhost:8000/live/${id}.flv`\r\n        });\r\n        this.player.attachMediaElement(this.videoRef.current);\r\n        this.player.load();\r\n    }\r\n    \r\n    render() {\r\n        if (!this.props.stream) {\r\n            return <div>Loading...</div>;\r\n        }\r\n        \r\n        const { title, description } = this.props.stream;\r\n\r\n        return (\r\n            <div>\r\n                <video ref={this.videoRef} style={{ width: \"100%\" }} controls />\r\n                <h1>{title}</h1>\r\n                <h5>{description}</h5>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { stream: state.streams[ownProps.match.params.id] }\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchStream })(StreamShow);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn, signOut } from \"../actions\";\r\n\r\nclass GoogleAuth extends React.Component {\r\n    componentDidMount() {\r\n        window.gapi.load(\"client:auth2\", () => {\r\n            window.gapi.client.init({\r\n                clientId: \"138963598721-j67hl58d51r4jk3dhoeks18r3j05m93l.apps.googleusercontent.com\",\r\n                scope: \"email\"\r\n            }).then(() => {\r\n                this.auth = window.gapi.auth2.getAuthInstance();\r\n\r\n                this.onAuthChange(this.auth.isSignedIn.get());\r\n                this.auth.isSignedIn.listen(this.onAuthChange);\r\n            });\r\n        });\r\n    }\r\n    \r\n    onAuthChange = (isSignedIn) => {\r\n        if (isSignedIn) {\r\n            this.props.signIn(this.auth.currentUser.get().getId());\r\n        } else {\r\n            this.props.signOut();\r\n        }\r\n    };\r\n\r\n    onSignInClick = () => {\r\n        this.auth.signIn();\r\n    };\r\n\r\n    onSignOutClick = () => {\r\n        this.auth.signOut();\r\n    };\r\n\r\n    renderAuthButton() {\r\n        if (this.props.isSignedIn === null) {\r\n            return null;\r\n        } else if (this.props.isSignedIn) {\r\n            return (\r\n                <button onClick={this.onSignOutClick} className=\"ui red google button\">\r\n                    <i className=\"google icon\" />\r\n                    Sign Out\r\n                </button>\r\n            );\r\n        } else {\r\n            return (\r\n                <button onClick={this.onSignInClick} className=\"ui red google button\">\r\n                    <i className=\"google icon\" />\r\n                    Sign In with Google\r\n                </button>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div>{this.renderAuthButton()}</div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { isSignedIn: state.auth.isSignedIn };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { signIn, signOut }\r\n)(GoogleAuth);","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport GoogleAuth from \"./GoogleAuth\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"ui secondary pointing menu\">\r\n            <Link to=\"/\" className=\"item\">\r\n                Streamy\r\n            </Link>\r\n            <div className=\"right menu\">\r\n                <Link to=\"/\" className=\"item\">\r\n                    All Streams\r\n                </Link>\r\n                <GoogleAuth />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\nimport StreamCreate from \"./streams/StreamCreate\";\r\nimport StreamEdit from \"./streams/StreamEdit\";\r\nimport StreamDelete from \"./streams/StreamDelete\";\r\nimport StreamList from \"./streams/StreamList\";\r\nimport StreamShow from \"./streams/StreamShow\";\r\nimport Header from \"./Header\";\r\nimport history from \"../history\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"ui container\">\r\n            <Router history={history}>\r\n                <div>\r\n                    <Header />\r\n                    <Switch>\r\n                        <Route path=\"/\" exact component={StreamList} />\r\n                        <Route path=\"/streams/new\" exact component={StreamCreate} />\r\n                        <Route path=\"/streams/edit/:id\" exact component={StreamEdit} />\r\n                        <Route path=\"/streams/delete/:id\" exact component={StreamDelete} />\r\n                        <Route path=\"/streams/:id\" exact component={StreamShow} />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","import { SIGN_IN, SIGN_OUT } from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = {\r\n    isSignedIn: null,\r\n    userId: null\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case SIGN_IN:\r\n            return { ...state, isSignedIn: true, userId: action.payload };\r\n        case SIGN_OUT:\r\n            return { ...state, isSignedIn: false, userId: null };\r\n        default:\r\n            return state;\r\n    }\r\n};","import { combineReducers } from \"redux\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport authReducer from \"./authReducer\";\r\nimport streamReducer from \"./streamReducer\";\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    streams: streamReducer\r\n});","import _ from \"lodash\";\r\n\r\nimport {\r\n    CREATE_STREAM,\r\n    FETCH_STREAMS,\r\n    FETCH_STREAM,\r\n    DELETE_STREAM,\r\n    EDIT_STREAM\r\n} from \"../actions/types\";\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case FETCH_STREAMS:\r\n            return { ...state, ..._.mapKeys(action.payload, \"id\") };\r\n        case FETCH_STREAM:\r\n            return { ...state, [action.payload.id]: action.payload };\r\n        case CREATE_STREAM:\r\n            return { ...state, [action.payload.id]: action.payload };\r\n        case EDIT_STREAM:\r\n            return { ...state, [action.payload.id]: action.payload };\r\n        case DELETE_STREAM:\r\n            return _.omit(state, action.payload);\r\n        default:\r\n            return state;\r\n    }\r\n};","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reduxThunk from \"redux-thunk\";\r\n\r\nimport App from \"./components/App\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(reduxThunk))\r\n    );\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector(\"#root\")\r\n);"],"sourceRoot":""}